# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'average.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox




class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(255, 207)
        self.formLayout = QtWidgets.QFormLayout(Form)
        self.formLayout.setObjectName("formLayout")

        Form.setStyleSheet("background: #161219") #beakground color

        self.title = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.title.setFont(font)
        self.title.setAlignment(QtCore.Qt.AlignCenter)
        self.title.setObjectName("title")
        self.title.setStyleSheet("color: #FFFFFF")

        self.formLayout.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.title)
        self.n1 = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.n1.setFont(font)
        self.n1.setObjectName("n1")
        self.n1.setStyleSheet("color: #FFFFFF")

        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.n1)
        self.number1 = QtWidgets.QLineEdit(Form)
        self.number1.setObjectName("number1")
        self.number1.setStyleSheet("color: #FFFFFF")
        self.number1.setStyleSheet(
            "border: 2px solid '#BC006C';" +
            "border-radius: 8px;" +
            "font-size: 12px;" +
            "color: 'white';"
        )

        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.number1)

        self.n2 = QtWidgets.QLabel(Form)
        self.n2.setStyleSheet("color: #FFFFFF")

        font = QtGui.QFont()
        font.setPointSize(12)
        self.n2.setFont(font)
        self.n2.setObjectName("n2")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.n2)
        self.number2 = QtWidgets.QLineEdit(Form)
        self.number2.setObjectName("number2")
        self.number2.setStyleSheet("color: #FFFFFF")
        self.number2.setStyleSheet(
            "border: 2px solid '#BC006C';" +
            "border-radius: 8px;" +
            "font-size: 12px;" +
            "color: 'white';"
        )


        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.number2)

        self.n3 = QtWidgets.QLabel(Form)
        self.n3.setStyleSheet("color: #FFFFFF")
        font = QtGui.QFont()
        font.setPointSize(12)
        self.n3.setFont(font)
        self.n3.setObjectName("n3")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.n3)
        self.number3 = QtWidgets.QLineEdit(Form)
        self.number3.setObjectName("number3")
        self.number3.setStyleSheet("color: #FFFFFF")
        self.number3.setStyleSheet(
            "border: 2px solid '#BC006C';" +
            "border-radius: 8px;" +
            "font-size: 12px;" +
            "color: 'white';"
        )


        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.number3)

        self.average = QtWidgets.QComboBox(Form)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.average.setFont(font)
        self.average.setObjectName("average")
        self.average.setStyleSheet("color: #FFFFFF")
        self.average.addItem("")
        self.average.addItem("")
        self.average.addItem("")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.average)

        self.significant_digit = QtWidgets.QComboBox(Form)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.significant_digit.setFont(font)
        self.significant_digit.setObjectName("significant_digit")
        self.significant_digit.setStyleSheet("color: #FFFFFF")

        self.significant_digit.addItem("")
        self.significant_digit.addItem("")
        self.significant_digit.addItem("")
        self.formLayout.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.significant_digit)

        self.calculate = QtWidgets.QPushButton(Form)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.calculate.setFont(font)
        self.calculate.setObjectName("calculate")
        self.calculate.setStyleSheet("color: #FFFFFF")
        self.calculate.setStyleSheet(
            "*{border: 2px solid '#BC006C';" +
            "border-radius: 10px;" +
            "font-size: 16px;" +
            "color: 'white';" +
            "padding: 5px 0;" +
            "margin: 0px 0px}" +
            "*:hover{background: '#BC006C';}"
        )

        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.calculate)
        self.result = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.result.setFont(font)
        self.result.setObjectName("result")
        self.result.setStyleSheet("color: #FFFFFF")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.result)

        self.significant_digit_label = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.significant_digit_label.setFont(font)
        self.significant_digit_label.setObjectName("result")
        self.significant_digit_label.setStyleSheet("color: #FFFFFF")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.significant_digit_label)

        self.calculate.clicked.connect(self.choose)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.title.setText(_translate("Form", "Calculate average"))
        self.n1.setText(_translate("Form", "Number 1:"))
        self.n2.setText(_translate("Form", "Number 2:"))
        self.n3.setText(_translate("Form", "Number 3:"))

        self.significant_digit.setItemText(0, _translate("Form", "None"))
        self.significant_digit.setItemText(1, _translate("Form", "1"))
        self.significant_digit.setItemText(2, _translate("Form", "2"))

        self.average.setItemText(0, _translate("Form", "arithmetic"))
        self.average.setItemText(1, _translate("Form", "geometric"))
        self.average.setItemText(2, _translate("Form", "harmonic"))
        self.calculate.setText(_translate("Form", "Calculate"))

        self.significant_digit_label.setText(_translate("Form", "Significant digit"))
        self.result.setText(_translate("Form", "Result = "))


    def check(self):

        x = self.number1.text()
        y = self.number2.text()
        z = self.number3.text()
        letter_check = str(x) + str(y) + str(z)

        for number in letter_check:
            if number.isalpha():
                common = [1]
                return common
            else:
                continue

        if x and y and z:
            num1 = float(x)
            num2 = float(y)
            num3 = float(z)
            common = [num1, num2, num3]
            return common
        elif x and y and not z:
            num1 = float(x)
            num2 = float(y)
            common = [num1, num2]
            return common
        elif x and z and not y:
            num1 = float(x)
            num2 = float(z)
            common = [num1, num2]
            return common
        elif y and z and not x:
            num1 = float(y)
            num2 = float(z)
            common = [num1, num2]
            return common
        else:
            common = [0]
            return common

    def choose(self):
        msg = QMessageBox()
        msg.setWindowTitle("Average")
        significant_digit = str(self.significant_digit.currentText())
        average = str(self.average.currentText())
        common = self.check()
        arytmet = 0
        geomet = 1
        harmon = 0

        if significant_digit == "None":
            rounding = 0
        elif significant_digit == "1":
            rounding = 1
        else:
            rounding = 2

        if len(common) == 3:
            if average == "arithmetic":
                for n in common:
                    arytmet = arytmet + n
                arytmet = arytmet / 3
                self.result.setText("Result = " + str(round(arytmet, rounding)))
            elif average == "geometric":
                for n in common:
                    geomet = geomet * n
                geomet = pow(geomet, (1 / 3))
                self.result.setText("Result = " + str(round(geomet, rounding)))
            elif average == "harmonic":
                for n in common:
                    harmon = harmon + (1 / n)
                harmon = 3 / harmon
                self.result.setText("Result = " + str(round(harmon, rounding)))

        elif len(common) == 2:
            if average == "arithmetic":
                for n in common:
                    arytmet = arytmet + n
                arytmet = arytmet / 2
                self.result.setText("Result = " + str(round(arytmet, rounding)))
            elif average == "geometric":
                for n in common:
                    geomet = geomet * n
                geomet = pow(geomet, (1 / 2))
                self.result.setText("Result = " + str(round(geomet, rounding)))
            elif average == "harmonic":
                for n in common:
                    harmon = harmon + (1 / n)
                harmon = 2 / harmon
                self.result.setText("Result = " + str(round(harmon, rounding)))
        elif common == [0]:
            msg.setText("Incorrect number of arguments. Please enter at least 2")
            msg.setIcon(QMessageBox.Warning)
            x = msg.exec_()
        elif common == [1]:
            msg.setText("Incorrect type of arguments. Please enter a number")
            msg.setIcon(QMessageBox.Warning)
            x = msg.exec_()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
